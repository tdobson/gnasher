clients
-------
client_id: UUID
name: String
client_address_1: String
client_address_2: String
client_address_3: String
town: String
county: String
post_code: String
contact_name: String
contact_email: String
contact_phone: String
import_id: String

projects
--------
project_id: UUID (also known as Submission ref)
client_id: UUID (Foreign Key to clients)
pv_number: String (Pattern: 'PV[0-9]{6}')
region: String (Foreign key to region_id)
project_name: String
site_id: String (Foreign key to sites)
dno_mpan_ref: Integer (Foreign Key to dno_details, renamed from DNO MPAN ref)
ref_number: String // legacy ref number
job_code: String // client project reference
site_live: Boolean
deadline_to_connect: Date

// these go back to the client
near the start of the process, we create a leter of authortiy and a mpan requst. THese go to the client who signs the letter of authority and gives us the mpan numbers in a spreadsheet.
The mpan numbers are loaded into our system, and the letter of aurotthiy is used to generatlate the schemmatic and  do the g98 etc application
auth_letter_sent: Boolean
mpan_request_sent: Boolean

schematic_created: Boolean


application_type: String / g98_application_created: / Application Type [g98/g99/g100 vs Mixed]
formal_dno_submitted: Boolean // the date the form was submitted
submission_date: Date // day they submitted paperwork
dno_due_date: Date // the date the dno should reply
dno_status: String // state related to the DNO approval
// has the g98 been created
approved_kwp: Float // this is the KWP you can have says the DNO


// we do an extra bit of work, and they agreed, and they've accepted and paid us.
quote_received: Boolean // relates to the DNO work - sending an invoice
customer_invoiced_date: Date //relates
dno_payment_made: Date //relates
acceptance_form_returned: Boolean //relates
date_approved: Date
comments: Text


Auth Letter Sent	Mpan request Sent	Schematic created	G98 Application created	Site plan uploaded	Rams
Project Complete	Project Invoiced




surveyor name	surveyor tel	surveyor email

derived fields:

kwp_from_oscar: Float // original kwp for site from quote
current_total_kwp: // current kwp from live data
total_kwp_with_limitation: Float // this is the live KWP with limitation



plots
-----
plot_id: UUID
project_id: String (Foreign Key to projects)
plot_number: String (Alphanumeric)
tracker_ref: String (Foreign key to status_id)
status: String (Foreign key to status_id)
siteId: String  (Foreign Key to sites)
housetype: String // what the customer calls the type of house
g99: Boolean
mpan: String // dno service number
postal_name_number: String
postal_street: String
postal_postcode: String
plot_approved: Boolean
dno_zone: String
plot_specified: String
import_id: String
commissioning_form_submitted: Boolean


plot_specified
------
plot_meta_id: UUID
date_specified: Date
specified_by: String (Foreign key to users)
status: String (Foreign key to status_id)
phase: String // either 1 or 3
p1: Integer // will be value if 1
p2: Integer // will be null if 1, but will be
p3: Integer // will be null if phase is 1 // is it per inverter or per plot? #todo
annual_yield: Float
kwp_with_limitation: Float
limiter_required: Boolean //
limiter_value_if_not_zero: Float // this is the limiter value if it's defined
labour_cost: Float
meter: Integer (Foreign Key to Products table)
meter_cost: Float
battery: Integer (Foreign Key to Products table)
battery_cost: Float
overall_cost: Float // total invoice value of the plot including installation and parts etc
landlord_supply: Boolean // is the landlord (vs tenant) responsible for supply
import_id: String (Foreign key to imports)
... (additional attributes for plot details)

plot_installed
------
plot_meta_id: UUID
date_installed: Date
date_checked: Date
installed_by: String (foreign key to user_id)
checked_by: String (foreign key to user_id)
status: String (Foreign key to status_id)
phase: String
p1: Integer
p2: Integer
p3: Integer
annual_yield: Float
kwp_with_limitation: Float
limiter_required: Boolean
limiter_value_if_not_zero: Float
labour_cost: Float
meter: Integer (Foreign Key to Products table)
meter_cost: Float
battery: Integer (Foreign Key to Products table)
battery_cost: Float
overall_cost: Float // total invoice value of the plot including installation and parts and elevations etc
import_id: String (Foreign key to imports)
... (additional attributes for plot details)


elevations
------
elevation_id: UUID
plot_ref_id: Foreign key to plot_installed or plot_specfied
type_test_ref: String
pitch: Float
orientation: String
kk_figure: Float
kwp: Float
strings: Integer
module_qty: Integer
inverter: String (product_id) (create an inverter "connected to string 1 inverter")
inverter_cost:
panel: String (product_id)
panel_cost: float
panels_total_cost: float
roof_kit: String (product_id)
roof_kit_cost: float
annual yield: float



sites
-----
site_id: UUID (also known as Internal Ref)
project_id: UUID (Foreign Key to projects)
dno_details_id: Integer (Foreign Key to dno_details)
site_address_line_1: String
site_address_line_2: String
site_town: String
site_county: String
site_postcode: String
dno_responsible_name: String
dno_responsible_email: String
site_manager_name: String
site_manager_email: String
site_manager_phone: String
... (additional attributes for site details)


// pick up with Graham




dno_details
-----------
dno_details_id: Integer
mpan_prefix: Integer (Unique, could be a Foreign Key if MPAN Prefixes are stored in another table)
dno_name: String
address: String
email_address: String
contact_no: String
internal_tel: String
type: String
... (additional attributes for DNO details)

region
------
region_id: UUID
region_number: Interger
region_name: String

form_submissions
----------------
submission_id: UUID
plot_id: UUID (Foreign Key to plots)
site_id: UUID (Foreign Key to sites)
product_id: UUID (Foreign Key to products, nullable)
... (additional attributes for submission details)

users
------
user_id: uuid
sso_id: string
name: string
email: string
employer: string
team: string (team_id)
dispatch_id
snowy_role: String
company_role: String

teams
----
team_id: uuid
team_name: string
team_description: string

job_statuses
---
job_status_id: uuid
job_status_name: string
job_status_code: string

import_events
---
import_id: uuid
import_date: date
user_id: Forieng key to users
import_ref
import_source
import_notes

jobs // Jobs are submitted pieces of work that go to people
-----
job_id : UUID
plot_id: string
plot_number: string
project_number: string
project_id: s
dispatch_id:
submission_id: DM submission ID
dispatched_at
dispatched_by
returned_at
returned_by
dispatch_team:
status: string (linked to job_status_id
user_id: linked to users field
slot_id: String (foriegn key to slots)


slots
----
slot_id: UUID
date: date
location_slot: Integer
time_slot: Integer
job_id: String (foreign key to jobs)



product_pricing? How do we deal with pricing that changes? Pricing for the date
in a multi elevation, there can me multiple strings of panels, but often 1 inverter, the orientation and direction and pitch etc will be different for each string of panels - each elevantion will need to report on total yield and things per array, but also for the entire installation.
gen meter is per installation

for each Plot:
- what was the plot specc'd as?
- what did the plot come back with?

when building a quote, you want your prices to be fixed at th emoment you *send* the quote, but you still want to monitor the current prices against the quote.


Each Plot will have a
plot_quoted
table with
